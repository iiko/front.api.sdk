<Window x:Class="Resto.Front.Api.SamplePlugin.Modifiers.ModifiersWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Resto.Front.Api.SamplePlugin.Modifiers"
        xmlns:wpfHelpers="clr-namespace:Resto.Front.Api.SamplePlugin.WpfHelpers"
        mc:Ignorable="d"
        Title="Modifiers"
        Height="600"
        Width="1000"
        Loaded="ModifiersWindow_OnLoaded"
        Closed="ModifiersWindow_OnClosed"
        d:DataContext="{d:DesignInstance Type=local:ModifiersWindowViewModel, IsDesignTimeCreatable=False}">
    <Window.Resources>
        <ResourceDictionary>
            <wpfHelpers:SystemColorToBrushConverter x:Key="SystemColorToBrushConverter" />
            <HierarchicalDataTemplate DataType="{x:Type local:TreeNodeViewModel}">
                <Grid>
                    <TextBlock Text="{Binding DisplayText}"/>
                </Grid>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:ProductViewModel}" ItemsSource="{Binding ChildrenNodes}">
                <Grid>
                    <TextBlock Text="{Binding DisplayText}"/>
                </Grid>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:ProductGroupViewModel}" ItemsSource="{Binding ChildrenNodes}">
                <Grid>
                    <TextBlock Text="{Binding DisplayText, StringFormat='[ {0} ]'}"/>
                </Grid>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:GroupModifierViewModel}" ItemsSource="{Binding ChildrenNodes}">
                <Grid>
                    <TextBlock Text="{Binding DisplayText, StringFormat='[ {0} ]'}"/>
                </Grid>
            </HierarchicalDataTemplate>

            <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}"
                   d:DataContext="{d:DesignInstance Type=local:TreeNodeViewModel, IsDesignTimeCreatable=False}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            </Style>

            <Style x:Key="LastOrderListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TreeView x:Name="Tree" ItemsSource="{Binding Nomenclature}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                          VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="Pixel"
                          VirtualizingPanel.VirtualizationMode="Recycling" SelectedItemChanged="Tree_OnSelectedItemChanged"/>
                <Button Grid.Row="1" Content="Refresh nomenclature"
                        Command="{Binding RefreshNomenclatureCommand}" />
            </Grid>
            <ContentPresenter Grid.Column="1" Content="{Binding SelectedNode}" >
                <ContentPresenter.Resources>
                    <ResourceDictionary>
                        <DataTemplate DataType="{x:Type local:ChildModifierViewModel}">
                            <StackPanel>
                                <TextBlock Text="{Binding DisplayText, StringFormat='Child modifier: {0}'}"/>
                                <TextBlock Text="{Binding DefaultAmount, StringFormat='Default amount: {0}'}"/>
                                <TextBlock Text="{Binding FreeOfChargeAmount, StringFormat='Free of charge amount: {0}'}"/>
                                <TextBlock Text="{Binding MaximumAmount, StringFormat='Maximum amount: {0}'}"/>
                                <TextBlock Text="{Binding MinimumAmount, StringFormat='Minimum amount: {0}'}"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding AmountIndependentOfParentAmount, StringFormat='Amount independent of parent: {0}', Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding AmountIndependentOfParentAmount, Mode=OneWay}" Margin="4 0 0 0"></CheckBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding HideIfDefaultAmount, StringFormat='Hide if default: {0}', Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding HideIfDefaultAmount, Mode=OneWay}" Margin="4 0 0 0" />
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local:GroupModifierViewModel}">
                            <StackPanel>
                                <TextBlock Text="{Binding DisplayText, StringFormat='Group modifier: {0}'}"/>
                                <TextBlock Text="{Binding Count, StringFormat='Count of nested items: {0}'}"/>
                                <TextBlock Text="{Binding FreeOfChargeAmount, StringFormat='Free of charge amount: {0}'}"/>
                                <TextBlock Text="{Binding MaximumAmount, StringFormat='Maximum amount: {0}'}"/>
                                <TextBlock Text="{Binding MenuIndex, StringFormat='Menu index: {0}'}"/>
                                <TextBlock Text="{Binding MinimumAmount, StringFormat='Minimum amount: {0}'}"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local:LoadingTreeNodeViewModel}">
                            <TextBlock Text="{Binding DisplayText, StringFormat='Selected: {0}'}"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local:ProductGroupViewModel}">
                            <StackPanel>
                                <TextBlock Text="{Binding DisplayText, StringFormat='Product group: {0}'}"/>
                                <TextBlock Text="{Binding FastCode, StringFormat='Fast code: {0}'}"/>
                                <TextBlock Text="{Binding Id, StringFormat='Id: {0}'}"/>
                                <TextBlock Text="{Binding MenuIndex, StringFormat='Menu index: {0}'}"/>
                                <TextBlock Text="{Binding Number, StringFormat='Number: {0}'}"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding HasMenuImage, StringFormat='Has menu image: {0}', Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding HasMenuImage, Mode=OneWay}" Margin="4 0 0 0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Colors:" />
                                    <Button Background="{Binding BackgroundColor, Converter={StaticResource SystemColorToBrushConverter}}"
                                            Foreground="{Binding FontColor, Converter={StaticResource SystemColorToBrushConverter}}"
                                            Content="Font" IsHitTestVisible="False" Margin="4 0 0 0"/>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local:ProductViewModel}">
                            <StackPanel>
                                <TextBlock Text="{Binding DisplayText, StringFormat='Product: {0}'}"/>
                                <TextBlock Text="{Binding DefaultCourse, StringFormat='Default course: {0}'}"/>
                                <TextBlock Text="{Binding Description, StringFormat='Description: {0}'}"/>
                                <TextBlock Text="{Binding DescriptionForeign, StringFormat='Description foreign: {0}'}"/>
                                <TextBlock Text="{Binding ExpirationTime, StringFormat='Expiration time: {0}'}"/>
                                <TextBlock Text="{Binding FastCode, StringFormat='Fast code: {0}'}"/>
                                <TextBlock Text="{Binding ForeignName, StringFormat='Foreign name: {0}'}"/>
                                <TextBlock Text="{Binding FoodValueFat, StringFormat='Food value fat: {0}'}"/>
                                <TextBlock Text="{Binding FoodValueProtein, StringFormat='Food value protein: {0}'}"/>
                                <TextBlock Text="{Binding FoodValueCarbohydrate, StringFormat='Food value carbohydrate: {0}'}"/>
                                <TextBlock Text="{Binding FoodValueCaloricity, StringFormat='Food value caloricity: {0}'}"/>
                                <TextBlock Text="{Binding FullName, StringFormat='Full name: {0}'}"/>
                                <TextBlock Text="{Binding Id, StringFormat='Id: {0}'}"/>
                                <TextBlock Text="{Binding KitchenName, StringFormat='Kitchen name: {0}'}"/>
                                <TextBlock Text="{Binding MeasuringUnit.FullName, StringFormat='Measuring unit full name: {0}'}"/>
                                <TextBlock Text="{Binding MeasuringUnit.Name, StringFormat='Measuring unit name: {0}'}"/>
                                <TextBlock Text="{Binding MeasuringUnit.Code, StringFormat='Measuring unit code: {0}'}"/>
                                <TextBlock Text="{Binding MenuIndex, StringFormat='Menu index: {0}'}"/>
                                <TextBlock Text="{Binding Number, StringFormat='Number: {0}'}"/>
                                <TextBlock Text="{Binding Price, StringFormat='Price: {0}'}"/>
                                <TextBlock Text="{Binding TaxPercent, StringFormat='Tax percent: {0}'}"/>
                                <TextBlock Text="{Binding Type, StringFormat='Product type: {0}'}"/>
                                <TextBlock Text="{Binding UzFiscalCode, StringFormat='UZ Fiscal code: {0}'}"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding IsActive, StringFormat='Is active: {0}'}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding IsActive, Mode=OneWay}" Margin="4 0 0 0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding ImmediateCookingStart, StringFormat='Immediate cooking start: {0}'}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding ImmediateCookingStart, Mode=OneWay}" Margin="4 0 0 0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding UseBalanceForSell, StringFormat='Use balance for sell: {0}'}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding UseBalanceForSell, Mode=OneWay}" Margin="4 0 0 0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding CanSetOpenPrice, StringFormat='Can set open price: {0}', Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding CanSetOpenPrice, Mode=OneWay}" Margin="4 0 0 0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding HasMenuImage, StringFormat='Has menu image: {0}', Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding HasMenuImage, Mode=OneWay}" Margin="4 0 0 0" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Colors:" />
                                    <Button Background="{Binding BackgroundColor, Converter={StaticResource SystemColorToBrushConverter}}"
                                            Foreground="{Binding FontColor, Converter={StaticResource SystemColorToBrushConverter}}"
                                            Content="Font" IsHitTestVisible="False" Margin="4 0 0 0"/>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local:SimpleModifierViewModel}">
                            <StackPanel>
                                <TextBlock Text="{Binding DisplayText, StringFormat='Simple modifier: {0}'}"/>
                                <TextBlock Text="{Binding DefaultAmount, StringFormat='Default amount: {0}'}"/>
                                <TextBlock Text="{Binding FreeOfChargeAmount, StringFormat='Free of charge amount: {0}'}"/>
                                <TextBlock Text="{Binding MaximumAmount, StringFormat='Maximum amount: {0}'}"/>
                                <TextBlock Text="{Binding MenuIndex, StringFormat='Menu index: {0}'}"/>
                                <TextBlock Text="{Binding MinimumAmount, StringFormat='Minimum amount: {0}'}"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding AmountIndependentOfParentAmount, StringFormat='Amount independent of parent: {0}', Mode=OneWay}"/>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding AmountIndependentOfParentAmount, Mode=OneWay}" Margin="4 0 0 0" />
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                    </ResourceDictionary>
                </ContentPresenter.Resources>
            </ContentPresenter>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel >
                    <Button Content="Add simple modifier to last order"
                            Command="{Binding AddSimpleModifierToOrderCommand}" />
                    <Button Content="Add group modifier to last order"
                            Command="{Binding AddGroupModifierToOrderCommand}" />
                    <Button Content="Delete printed order modifier item"
                            Command="{Binding DeletePrintedOrderModifierCommand}" />
                    <Button Content="Delete order modifier item"
                            Command="{Binding DeleteOrderModifierCommand}" />
                    <Button Content="Change order modifier item amount"
                            Command="{Binding ChangeOrderModifierItemAmountCommand}" />
                    <Button Content="Set modifier custom name"
                            Command="{Binding SetOrderModifierItemCustomNameCommand}" />
                    <Button Content="Add dish with group modifier to order"
                            Command="{Binding AddDishWithGroupModifierToOrderCommand}" />
                </StackPanel>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Last order:"/>
                    <ListBox Grid.Row="1" ItemsSource="{Binding LastOrderItems}" Style="{StaticResource LastOrderListBoxStyle}">
                        <ListBox.Resources>
                            <ResourceDictionary>
                                <DataTemplate DataType="{x:Type local:OrderProductItemViewModel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Amount}" />
                                        <TextBlock Margin="3 0 0 0" Grid.Column="1" Text="{Binding DisplayText}" />
                                        <TextBlock Grid.Column="2" Text="{Binding Price}"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:OrderModifierItemViewModel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Amount}" FontStyle="Italic" />
                                        <TextBlock Margin="16 0 0 0" Grid.Column="1" Text="{Binding DisplayText}"  FontStyle="Italic" />
                                        <TextBlock Grid.Column="2" Text="{Binding Price}"  FontStyle="Italic"/>
                                    </Grid>
                                </DataTemplate>
                            </ResourceDictionary>
                        </ListBox.Resources>
                    </ListBox>
                    <Button Grid.Row="2" Command="{Binding RefreshLastOrderItemsCommand}" Content="Refresh last order"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>